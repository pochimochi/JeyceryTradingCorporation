@model IEnumerable<JeyceryTradingCorporation.Models.Product>

@{
    ViewBag.Title = "Products";
}

<div class="container mt-5">
    <h2>Products</h2>

    <div class="container-fluid">
        @{Html.RenderAction("Create");}
        @{Html.RenderPartial("Table");}
    </div>
</div>

@foreach (var item in Model)
{
    <!-- Modal -->

    <div class="modal fade" id="EditModal@(item.ID)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @{Html.RenderAction("Edit", new { id = item.ID });}
                </div>
            </div>
        </div>
    </div>
}

<script>

    $(document).ready(function () {
        $('table').DataTable();
    });

    function CreateConfirmation() {

        Swal.fire({
            title: 'Do you want to create this item?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: `Create`,
            denyButtonText: `Don't Create`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $('#form0').submit();
            } else if (result.isDenied) {
                Swal.fire('Item not created', '', 'info')
            }
        });
    }

    function EditConfirmation(id) {

        Swal.fire({
            title: 'Do you want to save the changes?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: `Save`,
            denyButtonText: `Don't Save`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $('#EditForm' + id).submit();

            } else if (result.isDenied) {
                Swal.fire('Changes are not saved', '', 'info')
            }
        });
    }

    function DeleteConfirmation(id) {

        Swal.fire({
            title: 'Do you want to delete this item?',
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: `Delete`,
            denyButtonText: `Don't Delete`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $('#DeleteForm' + id).submit();
            } else if (result.isDenied) {
                Swal.fire('Item is not deleted', '', 'info')
            }
        });
    }

    function Success() {
        $('table').DataTable();
        $('.clear').val('');
        @if (ViewData.ModelState.IsValid)
    {
        @:$('.modal').modal('hide');
        @:$('.modal-backdrop').hide();
    }

        Swal.fire(
            'Success!',
            'You have successfully created a new Category',
            'success'
        )
    }
</script>





